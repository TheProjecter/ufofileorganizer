create table container (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
name varchar,
parent integer,
description longvarchar,
unique (name, parent),
foreign key (parent) references container (id)
);

create table type (
name varchar primary key
);


create table category (
name varchar primary key
);

create table groupid (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
name varchar,
parent integer,
location longvarchar,
size numeric,
freespace numeric,
description longvarchar,
type varchar,
unique (name, parent),
foreign key (parent) references container (id),
foreign key (type) references type (name)
);




create table directory (
name varchar,
idgroup integer,
modified numeric,
location longvarchar,
size numeric,
parentdir integer,
description longvarchar,
type varchar,
hidden boolean,
symlink boolean,
ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
--unique (idgroup, name, location),

--DA PENSARE BENE A QUESTO:
--foreign key (parentdir) references directory (id),
foreign key (type) references type (name),
foreign key (idgroup) references groupid (id)
);


create table file (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
name varchar,
idgroup integer,
modified numeric,
location longvarchar,
directoryid integer,
size numeric,
description longvarchar,
type varchar,
hidden boolean,
symlink boolean,
foreign key (directoryid) references directory (id),
foreign key (type) references type (name),
foreign key (idgroup) references groupid (id)
);

--create index index_dir on directory (location);

create index index_parentdir on directory ( parentdir );

create index index_file on file (directoryid);

INSERT INTO TYPE VALUES('CD');
INSERT INTO TYPE VALUES('DVD');
INSERT INTO TYPE VALUES('Directory');
INSERT INTO TYPE VALUES('File');
INSERT INTO TYPE VALUES('Group');
INSERT INTO TYPE VALUES('Hard Disk');

insert into container  ( id, name , description ) values (0, 'root' , 'master-root' )
